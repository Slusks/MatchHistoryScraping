Scratch work

## Sources:
Getting Started with Web Automation Testing using Selenium and Python
https://www.browserstack.com/guide/python-selenium-to-run-web-automation-test
Selenium 101: How To Automate Your Login Process
https://crossbrowsertesting.com/blog/test-automation/automate-login-with-selenium/




champdict = {}
header = driver.find_element_by_xpath('/html/body/div[3]/div[2]/div/div[2]/div/div/div/div[3]/div/div[2]/div[3]/div/div/div/table/tbody/tr[1]').get_attribute("id")
# the champion names are under a td class= 'team-100' or team-200 tag

#this is getting the champion names so they can be associated with the pandas dataframe
#loads the names into a dictionary with the champion name as the value.
#note the first champion index is 1 not 0

count = 2
while count < 12:
    index = str(count)
    champion = driver.find_element_by_xpath('/html/body/div[3]/div[2]/div/div[2]/div/div/div/div[3]/div/div[2]/div[3]/div/div/div/table/tbody/tr[1]/td['+index+']/div/div[1]/div').get_attribute("data-rg-id")
    champ_number = count-1
    champdict.update({champ_number : champion})
    count = count + 1

print('champlist: ', champdict)



#this grabs the table information and turns it into a pandas dataframe. 
#note, the pandas dataframe doesn't give us the players/champion name so we need to grab that.
table = driver.find_element_by_xpath('/html/body/div[3]/div[2]/div/div[2]/div/div/div/div[3]/div/div[2]/div[3]/div/div/div/table').get_attribute('outerHTML')
df_table = pd.read_html(table)
df = pd.DataFrame(df_table)
#write the data frame to a csv
df.to_csv(r'F:/LeagueStats/scraping/game_data.csv', index=False, header=True)


heading = []
for i in output_rows:
    if len(i) > 1:
        heading.append(i[0])
    else:
        continue
print(heading)

#headings = ['KDA', 'Largest Killing Spree', 'Largest Multi Kill', 'First Blood', 'Total Damage to Champions', 'Physical Damage to Champions', 'Magic Damage to Champions', 'True Damage to Champions', 'Total Damage Dealt', 'Physical Damage Dealt', 'Magic Damage Dealt', 'True Damage Dealt', 'Largest Critical Strike', 'Total Damage to Objectives', 'Total Damage to Turrets', 'Damage Healed', 'Damage Taken', 'Physical Damage Taken', 'Magic Damage Taken', 'True Damage Taken', 'Wards Placed', 'Wards Destroyed', 'Stealth Wards Purchased', 'Control Wards Purchased', 'Gold Earned', 'Gold Spent', 'Minions Killed', 'Neutral Minions Killed', "Neutral Minions Killed in Team's Jungle", 'Neutral Minions Killed in Enemy Jungle']

cut_headers = []
for row in output_rows:
    if len(row) > 1:
        row.pop(0)
        cut_headers.append(row)
    else:
        continue
print('headers cut')
for i in cut_headers:
    print(i)
